msgget 函数是用于创建新的消息队列或获取已存在消息队列的标识符的函数。它是进程间通信中使用消息队列的第一步。
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/msg.h>

int msgget(key_t key, int msgflg);

参数说明：

key：用于唯一标识消息队列的键值（key）。这个键值通常是通过 ftok 函数生成的，可以用一个字符串和一个整数组合而成。不同的键值对应不同的消息队列。

msgflg：标志位，用于指定消息队列的行为。通常使用的标志包括：

IPC_CREAT：如果消息队列不存在，则创建它。

IPC_EXCL：与 IPC_CREAT 一同使用，确保消息队列不存在，如果已存在则返回错误。
权限标志（例如，0666）：指定消息队列的权限，用于控制哪些进程可以访问该消息队列。这些权限标志通常使用八进制表示。

返回值：
如果成功，msgget 返回消息队列的标识符（非负整数），用于后续操作。
如果失败，返回-1，并设置 errno 来指示错误类型。


#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/msg.h>

int main() {
    key_t key = ftok("/tmp/msgq", 'A');  // 获取一个键值，通常使用 ftok 来生成

    int msqid = msgget(key, 0666 | IPC_CREAT);  // 创建或获取消息队列

    if (msqid == -1) {
        perror("msgget");
        exit(EXIT_FAILURE);
    }

    printf("消息队列标识符：%d\n", msqid);

    // 可以在这里进行其他操作，如发送和接收消息

    // 删除消息队列
    msgctl(msqid, IPC_RMID, NULL);

    return 0;
}
